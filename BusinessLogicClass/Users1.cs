//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ModelsEentityFramework.BusinessLogicClasses
{
    using System.Collections.Generic;
    using System.ComponentModel;
    using System.ComponentModel.DataAnnotations;
    

    public partial class Users1
    {
        public Users1()
        {
            this.Orders = new HashSet<Orders>();
            this.Products = new HashSet<Products>();
        }

        public int ID { get; set; }

        [DisplayName("نام کاربری")]
        [Required(ErrorMessage = "این فیلد را پر نمایید")]
        [StringLength(255, MinimumLength = 3, ErrorMessage = "نام کاربری باید بین 3 تا 255 کاراکتر باشد")]
        
        // Remote => return data in Jason format => barresi mikonad ke gablan UserName sabt shode ya na !!!!!! => using System.Web.Mvc;
        //[Remote("CheckUserName", "Home", ErrorMessage = "این نام کاربری تکراری است")]
        public string UserName { get; set; }

        [DisplayName("ایمیل")]
        [Required(ErrorMessage = "این فیلد را پر نمایید")]
        [StringLength(255, MinimumLength = 3, ErrorMessage = "ایمیل باید بین 3 تا 255 کاراکتر باشد")]
        [RegularExpression(@"\b[a-zA-Z0-9_]+[@][a-zA-Z0-9_]+[\.][a-zA-Z0-9_]+\b", ErrorMessage = "قالب ایمیل : example@example.com")]
        //[Remote("CheckEmail", "Home", ErrorMessage = "این نام کاربری تکراری است")]
        public string Email { get; set; }

        [DisplayName("پسورد")]
        [Required(ErrorMessage = "این فیلد را پر نمایید")]
        [StringLength(255, MinimumLength = 3, ErrorMessage = "پسورد باید بین 3 تا 255 کاراکتر باشد")]
        public string Password { get; set; }

        [DisplayName("نام و نام خانوادگی")]
        [Required(ErrorMessage = "این فیلد را پر نمایید")]
        [StringLength(255, MinimumLength = 3, ErrorMessage = "نام باید بین 3 تا 255 کاراکتر باشد")]
        public string Name { get; set; }

        [DisplayName("تاریخ تولد")]
        [Required(ErrorMessage = "این فیلد را پر نمایید")]
        public System.DateTime Birthday { get; set; }

        [DisplayName("شماره موبایل")]
        [Required(ErrorMessage = "این فیلد را پر نمایید")]
        [StringLength(11, MinimumLength = 11, ErrorMessage = "شماره موبایل باید 11 کاراکتر باشد")]
        public string Mobile { get; set; }

        [DisplayName("شماره تلفن")]
        [Required(ErrorMessage = "این فیلد را پر نمایید")]
        [StringLength(11, MinimumLength = 11, ErrorMessage = "شماره تلفن باید 11 کاراکتر باشد")]
        public string PhoneNumber { get; set; }

        [DisplayName("نام استان")]
        [Required(ErrorMessage = "این فیلد را پر نمایید")]
        [StringLength(100, MinimumLength = 2, ErrorMessage = "نام استان باید بین 2 تا 100 کاراکتر باشد")]
        public string province { get; set; }

        [DisplayName("نام شهرستان")]
        [Required(ErrorMessage = "این فیلد را پر نمایید")]
        [StringLength(100, MinimumLength = 2, ErrorMessage = "نام شهرستان باید بین 2 تا 100 کاراکتر باشد")]
        public string City { get; set; }

        [DisplayName("کد پستی")]
        [Required(ErrorMessage = "این فیلد را پر نمایید")]
        [StringLength(100, MinimumLength = 2, ErrorMessage = "کد پستی باید بین 2 تا 10 کاراکتر باشد")]
        public string PostalCode { get; set; }

        [DisplayName("آدرس کامل")]
        [Required(ErrorMessage = "این فیلد را پر نمایید")]
        [StringLength(255, MinimumLength = 5, ErrorMessage = "نام استان باید بین 5 تا 255 کاراکتر باشد")]
        public string Address { get; set; }
        public string UserPic { get; set; }
        public string Access { get; set; }
        public System.DateTime RegDate { get; set; }
        public bool Gender { get; set; }

        public virtual ICollection<Orders> Orders { get; set; }
        public virtual ICollection<Products> Products { get; set; }
    }
}
